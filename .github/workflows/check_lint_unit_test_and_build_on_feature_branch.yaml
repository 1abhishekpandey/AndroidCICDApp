name: Check Lint, Unit Test and Build on feature branch

on:
  pull_request:
    branches: ["feature"]
    types: ["opened", "reopened", "synchronize"]

jobs:
  cancel_previous:
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          workflow_id: ${{ github.event.workflow.id }}

  pipeline:
    name: Check Lint, Unit Test and Build
    runs-on: macos-latest
    if: (startsWith(github.head_ref, 'documentation/') || startsWith(github.head_ref, 'tests/') || startsWith(github.head_ref, 'infra/')) == false # Skip documentation, tests and infra branches

    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: cache gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-core-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-core-

      # - name: Add upload and keystore.properties files
      #   run: |
      #     pwd
      #     echo "${{ secrets.UPLOAD }}" | base64 --decode > app/UPLOAD
      #     echo "${{ secrets.KEYSTORE }}" > keystore.properties
      #     ls -li

      - name: Check linting
        run: ./gradlew lint

      - name: Check unit tests
        run: ./gradlew test

      - name: Build #and Sign
        run: ./gradlew build

      # - name: Upload the release apk as an artifact
      #   id: artifact-upload-step
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-release
      #     path: app/build/outputs/apk/release/app-release.apk

      # - name: Output artifact URL
      #   run: |
      #     echo 'Artifact URL is ${{ steps.artifact-upload-step.outputs.artifact-url }}'

      # - name: Slack notification
      #   if: ${{ always() }}
      #   run: |
      #     echo "Success"
      #     echo "Artifact URL is ${{ steps.artifact-upload-step.outputs.artifact-url }}"
      #     echo "Status is: ${{ job.status }}"
      #     echo "Steps are: ${{ toJson(steps) }}"

      # - name: Send message to Slack channel
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.24.0
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #     ARTIFACT_URL: ${{ steps.artifact-upload-step.outputs.artifact-url }}
      #     PROJECT_NAME: "Feature Pipeline"
      #   with:
      #     channel-id: ${{ secrets.SLACK_RELEASE_CHANNEL_ID }}
      #     payload: |
      #       {
      #         "blocks": [
      #           {
      #             "type": "header",
      #             "text": {
      #               "type": "plain_text",
      #               "text": "New release: ${{ env.PROJECT_NAME }}"
      #             }
      #           },
      #           {
      #             "type": "divider"
      #           },
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "mrkdwn",
      #               "text": "*Release: <${{ env.ARTIFACT_URL }}|Released APK>*\n${{ env.DATE }}"
      #             }
      #           }
      #         ]
      #       }

      # - name: Send message to Slack channel if job fails
      #   if: ${{ failure() }}
      #   id: slack-fail
      #   uses: slackapi/slack-github-action@v1.24.0
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #     PROJECT_NAME: "Feature Pipeline"
      #   with:
      #     channel-id: ${{ secrets.SLACK_RELEASE_CHANNEL_ID }}
      #     payload: |
      #       {
      #         "blocks": [
      #           {
      #             "type": "header",
      #             "text": {
      #               "type": "plain_text",
      #               "text": "Failed: ${{ env.PROJECT_NAME }}"
      #             }
      #           },
      #           {
      #             "type": "divider"
      #           },
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "plain_text",
      #               "text": "The feature pipeline failed. Please check the logs."
      #             }
      #           }
      #         ]
      #       }
